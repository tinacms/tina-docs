name: Search Functionality Tests

on:
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      preview_url:
        description: 'Preview URL to test (optional)'
        required: false
        type: string

jobs:
  test-search-local:
    name: Test Search (Local Build)
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.15.2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Build project
        run: pnpm build
        env:
          NEXT_PUBLIC_TINA_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_TINA_CLIENT_ID }}
          NEXT_PUBLIC_TINA_BRANCH: ${{ github.head_ref || github.ref_name }}
          TINA_TOKEN: ${{ secrets.TINA_TOKEN }}
          NEXT_PUBLIC_SITE_URL: http://localhost:3000

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Start local server
        run: |
          pnpm start &
          sleep 30
        env:
          NEXT_PUBLIC_TINA_CLIENT_ID: ${{ secrets.NEXT_PUBLIC_TINA_CLIENT_ID }}
          NEXT_PUBLIC_TINA_BRANCH: ${{ github.head_ref || github.ref_name }}
          TINA_TOKEN: ${{ secrets.TINA_TOKEN }}
          NEXT_PUBLIC_SITE_URL: http://localhost:3000

      - name: Run search tests
        run: pnpm test:search-simplified
        env:
          BASE_URL: http://localhost:3000

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-local
          path: |
            test-results/
            playwright-report/
          retention-days: 7

  test-search-preview:
    name: Test Search (Preview URL)
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.preview_url
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.15.2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Wait for preview deployment
        run: |
          echo "Waiting for preview deployment to be ready..."
          sleep 60

      - name: Run search tests on preview
        run: pnpm test:search-simplified
        env:
          BASE_URL: ${{ github.event.inputs.preview_url }}

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-preview
          path: |
            test-results/
            playwright-report/
          retention-days: 7

  test-search-vercel-preview:
    name: Test Search (Vercel Preview)
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9.15.2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Get Vercel preview URL
        id: get-preview-url
        run: |
          # Try to get preview URL from Vercel deployment
          # This assumes Vercel is connected to the repository
          PREVIEW_URL="https://${{ github.event.pull_request.number }}-${{ github.repository_owner }}-${{ github.event.repository.name }}.vercel.app"
          echo "preview_url=$PREVIEW_URL" >> $GITHUB_OUTPUT
          echo "Preview URL: $PREVIEW_URL"

      - name: Wait for preview deployment
        run: |
          echo "Waiting for Vercel preview deployment to be ready..."
          sleep 120

      - name: Run search tests on Vercel preview
        run: pnpm test:search-simplified
        env:
          BASE_URL: ${{ steps.get-preview-url.outputs.preview_url }}

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-vercel-preview
          path: |
            test-results/
            playwright-report/
          retention-days: 7

  report-results:
    name: Report Test Results
    runs-on: ubuntu-latest
    needs: [test-search-local, test-search-preview, test-search-vercel-preview]
    if: always()
    
    steps:
      - name: Download all test results
        uses: actions/download-artifact@v4
        with:
          path: test-results/

      - name: Create test summary
        run: |
          echo "## Search Functionality Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ -f "test-results/test-results-local/test-results/results.json" ]; then
            echo "### Local Tests ✅" >> $GITHUB_STEP_SUMMARY
            echo "Local search tests completed successfully." >> $GITHUB_STEP_SUMMARY
          else
            echo "### Local Tests ❌" >> $GITHUB_STEP_SUMMARY
            echo "Local search tests failed or were not run." >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ -f "test-results/test-results-preview/test-results/results.json" ]; then
            echo "### Preview Tests ✅" >> $GITHUB_STEP_SUMMARY
            echo "Preview search tests completed successfully." >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ -f "test-results/test-results-vercel-preview/test-results/results.json" ]; then
            echo "### Vercel Preview Tests ✅" >> $GITHUB_STEP_SUMMARY
            echo "Vercel preview search tests completed successfully." >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Check the artifacts for detailed test reports." >> $GITHUB_STEP_SUMMARY
